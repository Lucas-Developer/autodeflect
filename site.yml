---

# The controller is the central server (or servers) for administering
# groups of Deflect notes. The current model assumes that configs will
# be pushed from the controller to edge services by some mechanism.
- hosts: controller
  vars_files:
    - clients.yml
    - override.yml
  vars:
    # Ideally this is your edgemanage
    # (https://github.com/equalitie/edgemanage) directory
    bind_output: CHANGEME
    ats_output: CHANGEME
    nagios_output: /etc/nagios3/autoconf.d/CHANGEME
    dnets:
      mydnet: deflect.example.net
    default_cache_time: 10
    # Key used to generate challenges for the banjax protection system
    challenger_key: CHANGEME
    no_edit_template: 'DO NOT EDIT THIS FILE DIRECTLY. File generated by an ansible template.'
    # These are the servers that will zone transfer changes to as
    # public secondaries from our hidden primary
    dns_notify_servers: 
      - 192.168.1.2
      - 192.168.1.3
  tags:
    - controller
  roles:
    # Write out the almost-bind-style zonefiles. Best used in
    # combination with edgemanage.
    - {role: zonefile, tags: [zonefile, bind]}
    # Create Apache Traffic Server-style remap configuration files for
    # reverse proxying
    - {role: atsremap, tags: [ats]}
    # Write out user auth configurations for the banjax protection
    # system
    - {role: banjax, tags: banjax}
    # Nagios configurations for monitoring origins. 
    - {role: nagios, tags: nagios}

- hosts: awstats
  vars:
    awstats_output: /etc/awstats/
  vars_files:
    - clients.yml
  user: root
  tags:
    - awstats
  roles:
    - awstats

# {{ no_edit_template }}
# Banjax configuration file
# Each section is dedicated to different filter

# banned_regexes based on
# string(METHOD URL HOST UA)


white_lister :
{
  white_listed_ips = (
	##### deflect/eq internal IPs
	"192.168.1.2",
	"192.168.2.1"
  );
};

regex_banner :
{
  banned_regexes = ( 
		{ rule = "dos";
		  regex = "[\\s\\S]*";
		  interval = 60;
		  hits_per_interval = 400;
		},
		{ rule = "postdos";
		  regex = "[\\s\\S]*POST[\\s\\S]*";
		  interval = 30;
		  hits_per_interval = 60;
		}
		# User adds more rules here 
	);
};

challenger :
{
  key = "{{challenger_key}}";
  difficulty = 8; #only multiple of 4 is allowed
  hosts = (
	{ name = "myunderattacksite.example.com";
	  challenge_type = "sha_inverse";
	  challenge = "solver.html";
	  no_of_fails_to_ban = 20;
	  validity_period = 86400;
	}
{%- for site, attributes in remap | dictsort -%}
{%- if attributes["banjax_path"] -%},
	{ name = "{{site}}";
	  challenge_type = "auth";
	  challenge = "auth.html";
	  password_hash = "{{ attributes["banjax_password"] }}";
	  magic_word = "{{ attributes["banjax_path"] }}";
	  validity_period = 36000;
	  no_of_fails_to_ban = 10;
	},
	{ name = "www.{{site}}";
	  challenge_type = "auth";
	  challenge = "auth.html";
	  password_hash = "{{ attributes["banjax_password"] }}";
	  magic_word = "{{ attributes["banjax_path"] }}";
	  validity_period = 36000;
	  no_of_fails_to_ban = 10;
	}
{%- endif %}
{% endfor %}

   )
};
